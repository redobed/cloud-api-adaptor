# syntax=docker/dockerfile:1.5-labs
# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Creates a builder container image that should be used to build the Pod VM
# disk inside a container.
#
FROM registry.access.redhat.com/ubi9/ubi:9.2

ARG GO_VERSION="1.20.10"
ARG PROTOC_VERSION="3.11.4"
ARG RUST_VERSION="1.72.0"
ARG ORG_ID
ARG ACTIVATION_KEY
ARG YQ_VERSION="v4.35.1"


RUN dnf config-manager --set-enabled codeready-builder-for-rhel-9-x86_64-rpms && \
    dnf groupinstall -y 'Development Tools' && \
    dnf install -y yum-utils gnupg git perl-core pkg-config libseccomp-devel gpgme-devel \
        device-mapper-devel qemu-kvm unzip wget libassuan-devel \
	genisoimage cloud-utils-growpart cloud-init clang tpm2-tss-devel && \
    yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo && \
    dnf install -y packer && \
    dnf clean all && \
    curl https://dl.google.com/go/go${GO_VERSION}.linux-${ARCH}.tar.gz -o go${GO_VERSION}.linux-${ARCH}.tar.gz && \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-${ARCH}.tar.gz && \
    rm -f go${GO_VERSION}.linux-${ARCH}.tar.gz

# todo: install using checksum  
ADD https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_${ARCH} /usr/local/bin/yq
RUN chmod a+x /usr/local/bin/yq

# set a correspond qemu-system-* named link to qemu-kvm
RUN ln -s /usr/libexec/qemu-kvm /usr/bin/qemu-system-$(uname -m)

# cloud-utils package is not available for rhel.
RUN git clone https://github.com/canonical/cloud-utils
RUN cd cloud-utils && make install

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain "${RUST_VERSION}"

ENV PATH "/root/.cargo/bin:/usr/local/go/bin:$PATH"

RUN echo $PATH

RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip && \
    unzip protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip -d /usr/local && rm -f protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip

WORKDIR /src

ARG CAA_SRC="https://github.com/confidential-containers/cloud-api-adaptor"
ARG CAA_SRC_REF="main"

ARG KATA_SRC="https://github.com/kata-containers/kata-containers"
ARG KATA_SRC_BRANCH="CCv0"

RUN echo $CAA_SRC

RUN echo $CAA_SRC_REF

RUN git clone ${CAA_SRC} -b ${CAA_SRC_REF} cloud-api-adaptor
RUN git clone ${KATA_SRC} kata-containers
RUN cd kata-containers && git checkout ${KATA_SRC_BRANCH}

ENV GOPATH /src
